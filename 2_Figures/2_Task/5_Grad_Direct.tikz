
%%% Preamble Requirements %%%
% \usepackage{geometry}
% \usepackage{amsfonts}
% \usepackage{amsmath}
% \usepackage{amssymb}
% \usepackage{tikz}

% Optional packages such as sfmath set through python interface
% \usepackage{sfmath}

% \usetikzlibrary{arrows,chains,positioning,scopes,shapes.geometric,shapes.misc,shadows}

%%% End Preamble Requirements %%%

\input{/home/jav/Progs/Virt_Env/writing/lib/python3.12/site-packages/pyxdsm/diagram_styles.tex}
\begin{tikzpicture}

\matrix[MatrixSetup]{
%Row 0
\node [DataIO] (output_ode_Solv) {$\begin{array}{c}\text{initial starting} \\ \text{and mission fuel } \\ \text{mass } ($$m_{s,0}, m_{f,0})$$\end{array}$};&
&
&
&
&
&
\\
%Row 1
\node [Function] (ode_Solv) {$\begin{array}{c}\text{ODE}\end{array}$};&
\node [DataInter] (ode_Solv-mass_Calc) {$\begin{array}{c}$$m_{cr,0}$$\end{array}$};&
&
&
&
&
\\
%Row 2
\node [DataInter] (mass_Calc-ode_Solv) {$\begin{array}{c} m_{f,n}, m_{s,n}\end{array}$};&
\node [Function] (mass_Calc) {$\begin{array}{c}\text{mass recalc}\end{array}$};&
\node [DataInter] (mass_Calc-ode_Solv_2) {$\begin{array}{c}\, m_{s}*\end{array}$};&
&
&
&
\node [DataIO] (right_output_mass_Calc) {$\begin{array}{c}m_{s}*, \,  m_{f}* \end{array}$};\\
%Row 3
&
&
\node [Function] (ode_Solv_2) {$\begin{array}{c}\text{ODE}\end{array}$};&
\node [DataInter] (ode_Solv_2-dode_Solv_2) {$\begin{array}{c}m_{cr}* \end{array}$};&
&
&
\node [DataIO] (right_output_ode_Solv_2) {$\begin{array}{c}m_{cr}*\end{array}$};\\
%Row 4
&
&
&
\node [Function] (dode_Solv_2) {$\begin{array}{c}\text{dODE}\end{array}$};&
\node [DataInter] (dode_Solv_2-dx_2) {$\begin{array}{c}\dfrac{dm_{cr}*}{dp}\end{array}$};&
&
\node [DataIO] (right_output_dode_Solv_2) {$\begin{array}{c}\dfrac{dm_{cr}*}{dp}\end{array}$};\\
%Row 5
&
&
&
&
\node [Function] (dx_2) {$\begin{array}{c}\dfrac{dm_f}{dp}\end{array}$};&
&
\node [DataIO] (right_output_dx_2) {$\begin{array}{c}\dfrac{dm_{f}*}{dp}\end{array}$};\\
%Row 6
&
&
&
&
&
&
\\
};

% XDSM process chains


\begin{pgfonlayer}{data}
\path
% Horizontal edges
(ode_Solv) edge [DataLine] (ode_Solv-mass_Calc)
(mass_Calc) edge [DataLine] (mass_Calc-ode_Solv)
(mass_Calc) edge [DataLine] (mass_Calc-ode_Solv_2)
(ode_Solv_2) edge [DataLine] (ode_Solv_2-dode_Solv_2)
(dode_Solv_2) edge [DataLine] (dode_Solv_2-dx_2)
(mass_Calc) edge [DataLine] (right_output_mass_Calc)
(ode_Solv_2) edge [DataLine] (right_output_ode_Solv_2)
(dode_Solv_2) edge [DataLine] (right_output_dode_Solv_2)
(dx_2) edge [DataLine] (right_output_dx_2)
% Vertical edges
(ode_Solv-mass_Calc) edge [DataLine] (mass_Calc)
(mass_Calc-ode_Solv) edge [DataLine] (ode_Solv)
(mass_Calc-ode_Solv_2) edge [DataLine] (ode_Solv_2)
(ode_Solv_2-dode_Solv_2) edge [DataLine] (dode_Solv_2)
(dode_Solv_2-dx_2) edge [DataLine] (dx_2)
(ode_Solv) edge [DataLine] (output_ode_Solv);
\end{pgfonlayer}

\end{tikzpicture}
